syntax = "proto3";
package v1;

option go_package = "./openauth_v1";

// Group represents a group/role in the system for organizing users and permissions
message Group {
    // Unique identifier for the group
    int64 id = 1;
    
    // Unique UUID for the group
    string uuid = 2;
    
    // Unique name for the group
    string name = 3;
    
    // Human-readable display name for the group
    string display_name = 4;
    
    // Optional detailed description of the group
    optional string description = 5;
    
    // Whether this is a system group (cannot be deleted)
    bool is_system = 6;
    
    // Whether this is the default group for new users
    bool is_default = 7;
    
    // Timestamp when the group was created
    int64 created_at = 8;
    
    // Timestamp when the group was last updated
    int64 updated_at = 9;
}

// CreateGroupRequest to create a new group
message CreateGroupRequest {
    // Unique name for the group
    string name = 1;
    
    // Human-readable display name for the group
    string display_name = 2;
    
    // Optional detailed description of the group
    optional string description = 3;
    
    // Whether this is the default group for new users (optional, defaults to false)
    optional bool is_default = 4;
}

// CreateGroupResponse after successful group creation
message CreateGroupResponse {
    Group group = 1;
    string message = 2;
}

// GetGroupRequest to get group by ID or name
message GetGroupRequest {
    oneof identifier {
        int64 id = 1;
        string uuid = 2;
        string name = 3;
    }
}

// GetGroupResponse
message GetGroupResponse {
    Group group = 1;
}

// UpdateGroupRequest to update group information
message UpdateGroupRequest {
    // Identifier for the group to update
    oneof identifier {
        int64 id = 1;
        string uuid = 2;
        string name = 3;
    }
    
    // Optional new name for the group
    optional string new_name = 4;
    
    // Optional new display name
    optional string display_name = 5;
    
    // Optional new description
    optional string description = 6;
    
    // Optional new default status
    optional bool is_default = 7;
}

// UpdateGroupResponse
message UpdateGroupResponse {
    Group group = 1;
    string message = 2;
}

// DeleteGroupRequest to delete a group
message DeleteGroupRequest {
    oneof identifier {
        int64 id = 1;
        string uuid = 2;
        string name = 3;
    }
}

// DeleteGroupResponse
message DeleteGroupResponse {
    bool success = 1;
    string message = 2;
}

// ListGroupsRequest for listing groups with pagination and filtering
message ListGroupsRequest {
    // Maximum number of groups to return (default: 10, max: 100)
    int32 limit = 1;
    
    // Number of groups to skip (for pagination)
    int32 offset = 2;
    
    // Optional search query (searches name, display_name, description)
    optional string search = 3;
    
    // Optional filter by system groups
    optional bool is_system = 4;
    
    // Optional filter by default groups
    optional bool is_default = 5;
}

// ListGroupsResponse
message ListGroupsResponse {
    repeated Group groups = 1;
    int32 total_count = 2;
    int32 limit = 3;
    int32 offset = 4;
    bool has_more = 5;
}

// AssignUserToGroupRequest to add a user to a group
message AssignUserToGroupRequest {
    // User identifier
    oneof user_identifier {
        int64 user_id = 1;
        string user_uuid = 2;
    }
    
    // Group identifier
    oneof group_identifier {
        int64 group_id = 3;
        string group_uuid = 4;
        string group_name = 5;
    }
    
    // Optional expiration time for the group membership
    optional int64 expires_at = 6;
}

// AssignUserToGroupResponse
message AssignUserToGroupResponse {
    bool success = 1;
    string message = 2;
}

// RemoveUserFromGroupRequest to remove a user from a group
message RemoveUserFromGroupRequest {
    // User identifier
    oneof user_identifier {
        int64 user_id = 1;
        string user_uuid = 2;
    }
    
    // Group identifier
    oneof group_identifier {
        int64 group_id = 3;
        string group_uuid = 4;
        string group_name = 5;
    }
}

// RemoveUserFromGroupResponse
message RemoveUserFromGroupResponse {
    bool success = 1;
    string message = 2;
}

// ListGroupUsersRequest to get all users in a group
message ListGroupUsersRequest {
    // Group identifier
    oneof group_identifier {
        int64 group_id = 1;
        string group_uuid = 2;
        string group_name = 3;
    }
    
    // Pagination
    int32 limit = 4;
    int32 offset = 5;
}

// ListGroupUsersResponse
message ListGroupUsersResponse {
    repeated GroupUser users = 1;
    int32 total_count = 2;
    int32 limit = 3;
    int32 offset = 4;
    bool has_more = 5;
}

// GroupUser represents a user's membership in a group
message GroupUser {
    int64 user_id = 1;
    string user_uuid = 2;
    string username = 3;
    optional string email = 4;
    optional string name = 5;
    optional int64 expires_at = 6;
    int64 assigned_at = 7;
}

// ListUserGroupsRequest to get all groups for a user
message ListUserGroupsRequest {
    // User identifier
    oneof user_identifier {
        int64 user_id = 1;
        string user_uuid = 2;
    }
    
    // Pagination
    int32 limit = 3;
    int32 offset = 4;
}

// ListUserGroupsResponse
message ListUserGroupsResponse {
    repeated UserGroup groups = 1;
    int32 total_count = 2;
    int32 limit = 3;
    int32 offset = 4;
    bool has_more = 5;
}

// UserGroup represents a group membership for a user
message UserGroup {
    int64 group_id = 1;
    string group_uuid = 2;
    string group_name = 3;
    string group_display_name = 4;
    optional string group_description = 5;
    bool is_system = 6;
    bool is_default = 7;
    optional int64 expires_at = 8;
    int64 assigned_at = 9;
}
