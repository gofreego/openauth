// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/openauth/v1/permissions.proto

package openauth_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Permission represents a specific authorization rule in the system.
// It follows a Resource-Based Access Control (RBAC) pattern where permissions
// are defined by combining a resource (what) with an action (how).
//
// Example: A permission with resource="users" and action="create" allows
// creating new user accounts.
type Permission struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for the permission
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique name for the permission, typically in format "resource.action"
	// Examples: "users.create", "permissions.delete", "groups.read"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable display name for the permission
	// Examples: "Create Users", "Delete Permissions", "View Groups"
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional detailed description of what this permission allows
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// The resource this permission applies to (what entity/domain object)
	// Examples: "users", "groups", "permissions", "sessions", "posts", "orders"
	Resource string `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	// The action that can be performed on the resource
	// Common actions: "create", "read", "update", "delete", "list"
	// Custom actions: "publish", "approve", "archive", "export"
	Action string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
	// Whether this is a system permission (cannot be modified/deleted)
	// System permissions are critical for application functionality
	IsSystem bool `protobuf:"varint,7,opt,name=is_system,json=isSystem,proto3" json:"is_system,omitempty"`
	// Unix timestamp when the permission was created
	CreatedAt int64 `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Unix timestamp when the permission was last updated
	UpdatedAt     int64 `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permission) Reset() {
	*x = Permission{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{0}
}

func (x *Permission) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Permission) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Permission) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Permission) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Permission) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Permission) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *Permission) GetIsSystem() bool {
	if x != nil {
		return x.IsSystem
	}
	return false
}

func (x *Permission) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Permission) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// Request to create a new permission
type CreatePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Common header fields for authentication and client identification
	Headers *RequestHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Unique name for the permission, typically in format "resource.action"
	// Must be unique across all permissions
	// Examples: "users.create", "orders.approve", "reports.export"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable display name
	// Examples: "Create Users", "Approve Orders", "Export Reports"
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Optional detailed description explaining what this permission allows
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// The resource this permission applies to
	// Should be a noun representing an entity in your system
	// Examples: "users", "groups", "permissions", "posts", "orders"
	Resource string `protobuf:"bytes,5,opt,name=resource,proto3" json:"resource,omitempty"`
	// The action that can be performed on the resource
	// Should be a verb representing an operation
	// Examples: "create", "read", "update", "delete", "list", "publish", "approve"
	Action        string `protobuf:"bytes,6,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePermissionRequest) Reset() {
	*x = CreatePermissionRequest{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePermissionRequest) ProtoMessage() {}

func (x *CreatePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePermissionRequest.ProtoReflect.Descriptor instead.
func (*CreatePermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePermissionRequest) GetHeaders() *RequestHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CreatePermissionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePermissionRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreatePermissionRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreatePermissionRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *CreatePermissionRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

// Request to retrieve a specific permission by ID
type GetPermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Common header fields for authentication and client identification
	Headers *RequestHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// The unique identifier of the permission to retrieve
	Id            int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPermissionRequest) Reset() {
	*x = GetPermissionRequest{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermissionRequest) ProtoMessage() {}

func (x *GetPermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermissionRequest.ProtoReflect.Descriptor instead.
func (*GetPermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{2}
}

func (x *GetPermissionRequest) GetHeaders() *RequestHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *GetPermissionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request to list permissions with optional filtering and pagination
type ListPermissionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Common header fields for authentication and client identification
	Headers *RequestHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// Maximum number of permissions to return (default: 10, max: 100)
	Limit *int32 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	// Number of permissions to skip for pagination (default: 0)
	Offset *int32 `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	// Search term to filter permissions by name, display_name, or description
	// Uses case-insensitive partial matching
	Search *string `protobuf:"bytes,4,opt,name=search,proto3,oneof" json:"search,omitempty"`
	// Filter permissions by specific resource
	// Examples: "users", "groups", "permissions"
	Resource *string `protobuf:"bytes,5,opt,name=resource,proto3,oneof" json:"resource,omitempty"`
	// Filter permissions by specific action
	// Examples: "create", "read", "update", "delete"
	Action *string `protobuf:"bytes,6,opt,name=action,proto3,oneof" json:"action,omitempty"`
	// Filter by system vs user-created permissions
	// true: only system permissions, false: only user-created permissions
	IsSystem      *bool `protobuf:"varint,7,opt,name=is_system,json=isSystem,proto3,oneof" json:"is_system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionsRequest) Reset() {
	*x = ListPermissionsRequest{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsRequest) ProtoMessage() {}

func (x *ListPermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsRequest.ProtoReflect.Descriptor instead.
func (*ListPermissionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{3}
}

func (x *ListPermissionsRequest) GetHeaders() *RequestHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *ListPermissionsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListPermissionsRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListPermissionsRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *ListPermissionsRequest) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

func (x *ListPermissionsRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *ListPermissionsRequest) GetIsSystem() bool {
	if x != nil && x.IsSystem != nil {
		return *x.IsSystem
	}
	return false
}

// Response containing a list of permissions with pagination metadata
type ListPermissionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Array of permissions matching the request criteria
	Permissions []*Permission `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// Total number of permissions that match the filter criteria
	// (not just the current page)
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// The limit value used for this request
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// The offset value used for this request
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// Whether there are more permissions available beyond the current result set
	HasMore       bool `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPermissionsResponse) Reset() {
	*x = ListPermissionsResponse{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPermissionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPermissionsResponse) ProtoMessage() {}

func (x *ListPermissionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPermissionsResponse.ProtoReflect.Descriptor instead.
func (*ListPermissionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{4}
}

func (x *ListPermissionsResponse) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ListPermissionsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListPermissionsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPermissionsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPermissionsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// Request to update an existing permission
type UpdatePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Common header fields for authentication and client identification
	Headers *RequestHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// The unique identifier of the permission to update
	Id int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// New name for the permission (optional)
	// Must be unique if provided
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// New display name for the permission (optional)
	DisplayName *string `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3,oneof" json:"display_name,omitempty"`
	// New description for the permission (optional)
	// Set to empty string to clear existing description
	Description *string `protobuf:"bytes,5,opt,name=description,proto3,oneof" json:"description,omitempty"`
	// New resource for the permission (optional)
	Resource *string `protobuf:"bytes,6,opt,name=resource,proto3,oneof" json:"resource,omitempty"`
	// New action for the permission (optional)
	Action        *string `protobuf:"bytes,7,opt,name=action,proto3,oneof" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePermissionRequest) Reset() {
	*x = UpdatePermissionRequest{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePermissionRequest) ProtoMessage() {}

func (x *UpdatePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePermissionRequest.ProtoReflect.Descriptor instead.
func (*UpdatePermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePermissionRequest) GetHeaders() *RequestHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *UpdatePermissionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePermissionRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdatePermissionRequest) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *UpdatePermissionRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdatePermissionRequest) GetResource() string {
	if x != nil && x.Resource != nil {
		return *x.Resource
	}
	return ""
}

func (x *UpdatePermissionRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

// Request to delete a permission
type DeletePermissionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Common header fields for authentication and client identification
	Headers *RequestHeaders `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	// The unique identifier of the permission to delete
	// Note: System permissions cannot be deleted
	Id            int64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePermissionRequest) Reset() {
	*x = DeletePermissionRequest{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePermissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionRequest) ProtoMessage() {}

func (x *DeletePermissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionRequest.ProtoReflect.Descriptor instead.
func (*DeletePermissionRequest) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{6}
}

func (x *DeletePermissionRequest) GetHeaders() *RequestHeaders {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *DeletePermissionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response confirming permission deletion
type DeletePermissionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the deletion was successful
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Human-readable message about the deletion result
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePermissionResponse) Reset() {
	*x = DeletePermissionResponse{}
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePermissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermissionResponse) ProtoMessage() {}

func (x *DeletePermissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_openauth_v1_permissions_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermissionResponse.ProtoReflect.Descriptor instead.
func (*DeletePermissionResponse) Descriptor() ([]byte, []int) {
	return file_proto_openauth_v1_permissions_proto_rawDescGZIP(), []int{7}
}

func (x *DeletePermissionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeletePermissionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_openauth_v1_permissions_proto protoreflect.FileDescriptor

const file_proto_openauth_v1_permissions_proto_rawDesc = "" +
	"\n" +
	"#proto/openauth/v1/permissions.proto\x12\x02v1\x1a\x1aproto/common/headers.proto\"\x99\x02\n" +
	"\n" +
	"Permission\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x1a\n" +
	"\bresource\x18\x05 \x01(\tR\bresource\x12\x16\n" +
	"\x06action\x18\x06 \x01(\tR\x06action\x12\x1b\n" +
	"\tis_system\x18\a \x01(\bR\bisSystem\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\x03R\tupdatedAtB\x0e\n" +
	"\f_description\"\xe9\x01\n" +
	"\x17CreatePermissionRequest\x12,\n" +
	"\aheaders\x18\x01 \x01(\v2\x12.v1.RequestHeadersR\aheaders\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x00R\vdescription\x88\x01\x01\x12\x1a\n" +
	"\bresource\x18\x05 \x01(\tR\bresource\x12\x16\n" +
	"\x06action\x18\x06 \x01(\tR\x06actionB\x0e\n" +
	"\f_description\"T\n" +
	"\x14GetPermissionRequest\x12,\n" +
	"\aheaders\x18\x01 \x01(\v2\x12.v1.RequestHeadersR\aheaders\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\"\xc1\x02\n" +
	"\x16ListPermissionsRequest\x12,\n" +
	"\aheaders\x18\x01 \x01(\v2\x12.v1.RequestHeadersR\aheaders\x12\x19\n" +
	"\x05limit\x18\x02 \x01(\x05H\x00R\x05limit\x88\x01\x01\x12\x1b\n" +
	"\x06offset\x18\x03 \x01(\x05H\x01R\x06offset\x88\x01\x01\x12\x1b\n" +
	"\x06search\x18\x04 \x01(\tH\x02R\x06search\x88\x01\x01\x12\x1f\n" +
	"\bresource\x18\x05 \x01(\tH\x03R\bresource\x88\x01\x01\x12\x1b\n" +
	"\x06action\x18\x06 \x01(\tH\x04R\x06action\x88\x01\x01\x12 \n" +
	"\tis_system\x18\a \x01(\bH\x05R\bisSystem\x88\x01\x01B\b\n" +
	"\x06_limitB\t\n" +
	"\a_offsetB\t\n" +
	"\a_searchB\v\n" +
	"\t_resourceB\t\n" +
	"\a_actionB\f\n" +
	"\n" +
	"_is_system\"\xb5\x01\n" +
	"\x17ListPermissionsResponse\x120\n" +
	"\vpermissions\x18\x01 \x03(\v2\x0e.v1.PermissionR\vpermissions\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\x12\x19\n" +
	"\bhas_more\x18\x05 \x01(\bR\ahasMore\"\xbf\x02\n" +
	"\x17UpdatePermissionRequest\x12,\n" +
	"\aheaders\x18\x01 \x01(\v2\x12.v1.RequestHeadersR\aheaders\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\x12\x17\n" +
	"\x04name\x18\x03 \x01(\tH\x00R\x04name\x88\x01\x01\x12&\n" +
	"\fdisplay_name\x18\x04 \x01(\tH\x01R\vdisplayName\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x05 \x01(\tH\x02R\vdescription\x88\x01\x01\x12\x1f\n" +
	"\bresource\x18\x06 \x01(\tH\x03R\bresource\x88\x01\x01\x12\x1b\n" +
	"\x06action\x18\a \x01(\tH\x04R\x06action\x88\x01\x01B\a\n" +
	"\x05_nameB\x0f\n" +
	"\r_display_nameB\x0e\n" +
	"\f_descriptionB\v\n" +
	"\t_resourceB\t\n" +
	"\a_action\"W\n" +
	"\x17DeletePermissionRequest\x12,\n" +
	"\aheaders\x18\x01 \x01(\v2\x12.v1.RequestHeadersR\aheaders\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\x03R\x02id\"N\n" +
	"\x18DeletePermissionResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessageB\x0fZ\r./openauth_v1b\x06proto3"

var (
	file_proto_openauth_v1_permissions_proto_rawDescOnce sync.Once
	file_proto_openauth_v1_permissions_proto_rawDescData []byte
)

func file_proto_openauth_v1_permissions_proto_rawDescGZIP() []byte {
	file_proto_openauth_v1_permissions_proto_rawDescOnce.Do(func() {
		file_proto_openauth_v1_permissions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_openauth_v1_permissions_proto_rawDesc), len(file_proto_openauth_v1_permissions_proto_rawDesc)))
	})
	return file_proto_openauth_v1_permissions_proto_rawDescData
}

var file_proto_openauth_v1_permissions_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_openauth_v1_permissions_proto_goTypes = []any{
	(*Permission)(nil),               // 0: v1.Permission
	(*CreatePermissionRequest)(nil),  // 1: v1.CreatePermissionRequest
	(*GetPermissionRequest)(nil),     // 2: v1.GetPermissionRequest
	(*ListPermissionsRequest)(nil),   // 3: v1.ListPermissionsRequest
	(*ListPermissionsResponse)(nil),  // 4: v1.ListPermissionsResponse
	(*UpdatePermissionRequest)(nil),  // 5: v1.UpdatePermissionRequest
	(*DeletePermissionRequest)(nil),  // 6: v1.DeletePermissionRequest
	(*DeletePermissionResponse)(nil), // 7: v1.DeletePermissionResponse
	(*RequestHeaders)(nil),           // 8: v1.RequestHeaders
}
var file_proto_openauth_v1_permissions_proto_depIdxs = []int32{
	8, // 0: v1.CreatePermissionRequest.headers:type_name -> v1.RequestHeaders
	8, // 1: v1.GetPermissionRequest.headers:type_name -> v1.RequestHeaders
	8, // 2: v1.ListPermissionsRequest.headers:type_name -> v1.RequestHeaders
	0, // 3: v1.ListPermissionsResponse.permissions:type_name -> v1.Permission
	8, // 4: v1.UpdatePermissionRequest.headers:type_name -> v1.RequestHeaders
	8, // 5: v1.DeletePermissionRequest.headers:type_name -> v1.RequestHeaders
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_openauth_v1_permissions_proto_init() }
func file_proto_openauth_v1_permissions_proto_init() {
	if File_proto_openauth_v1_permissions_proto != nil {
		return
	}
	file_proto_common_headers_proto_init()
	file_proto_openauth_v1_permissions_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_openauth_v1_permissions_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_openauth_v1_permissions_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_openauth_v1_permissions_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_openauth_v1_permissions_proto_rawDesc), len(file_proto_openauth_v1_permissions_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_openauth_v1_permissions_proto_goTypes,
		DependencyIndexes: file_proto_openauth_v1_permissions_proto_depIdxs,
		MessageInfos:      file_proto_openauth_v1_permissions_proto_msgTypes,
	}.Build()
	File_proto_openauth_v1_permissions_proto = out.File
	file_proto_openauth_v1_permissions_proto_goTypes = nil
	file_proto_openauth_v1_permissions_proto_depIdxs = nil
}
