///
//  Generated code. Do not modify.
//  source: openauth/v1/openauth.proto
//
// @dart = 2.12
// ignore_for_file: annotate_overrides,camel_case_types,constant_identifier_names,deprecated_member_use_from_same_package,directives_ordering,library_prefixes,non_constant_identifier_names,prefer_final_fields,return_of_invalid_type,unnecessary_const,unnecessary_import,unnecessary_this,unused_import,unused_shown_name

import 'dart:core' as $core;
import 'dart:convert' as $convert;
import 'dart:typed_data' as $typed_data;
import '../../common/ping.pbjson.dart' as $1;
import 'stats.pbjson.dart' as $2;
import 'permissions.pbjson.dart' as $3;
import 'groups.pbjson.dart' as $4;
import 'permission_assignments.pbjson.dart' as $5;
import 'users.pbjson.dart' as $0;
import 'sessions.pbjson.dart' as $6;

const $core.Map<$core.String, $core.dynamic> OpenAuthServiceBase$json = const {
  '1': 'OpenAuth',
  '2': const [
    const {'1': 'Ping', '2': '.v1.PingRequest', '3': '.v1.PingResponse', '4': const {}},
    const {'1': 'Stats', '2': '.v1.StatsRequest', '3': '.v1.StatsResponse', '4': const {}},
    const {'1': 'CreatePermission', '2': '.v1.CreatePermissionRequest', '3': '.v1.Permission', '4': const {}},
    const {'1': 'GetPermission', '2': '.v1.GetPermissionRequest', '3': '.v1.Permission', '4': const {}},
    const {'1': 'ListPermissions', '2': '.v1.ListPermissionsRequest', '3': '.v1.ListPermissionsResponse', '4': const {}},
    const {'1': 'UpdatePermission', '2': '.v1.UpdatePermissionRequest', '3': '.v1.Permission', '4': const {}},
    const {'1': 'DeletePermission', '2': '.v1.DeletePermissionRequest', '3': '.v1.DeletePermissionResponse', '4': const {}},
    const {'1': 'CreateGroup', '2': '.v1.CreateGroupRequest', '3': '.v1.CreateGroupResponse', '4': const {}},
    const {'1': 'GetGroup', '2': '.v1.GetGroupRequest', '3': '.v1.GetGroupResponse', '4': const {}},
    const {'1': 'ListGroups', '2': '.v1.ListGroupsRequest', '3': '.v1.ListGroupsResponse', '4': const {}},
    const {'1': 'UpdateGroup', '2': '.v1.UpdateGroupRequest', '3': '.v1.UpdateGroupResponse', '4': const {}},
    const {'1': 'DeleteGroup', '2': '.v1.DeleteGroupRequest', '3': '.v1.DeleteGroupResponse', '4': const {}},
    const {'1': 'AssignUsersToGroup', '2': '.v1.AssignUsersToGroupRequest', '3': '.v1.AssignUsersToGroupResponse', '4': const {}},
    const {'1': 'RemoveUsersFromGroup', '2': '.v1.RemoveUsersFromGroupRequest', '3': '.v1.RemoveUsersFromGroupResponse', '4': const {}},
    const {'1': 'ListGroupUsers', '2': '.v1.ListGroupUsersRequest', '3': '.v1.ListGroupUsersResponse', '4': const {}},
    const {'1': 'ListUserGroups', '2': '.v1.ListUserGroupsRequest', '3': '.v1.ListUserGroupsResponse', '4': const {}},
    const {'1': 'AssignPermissionsToGroup', '2': '.v1.AssignPermissionsToGroupRequest', '3': '.v1.AssignPermissionsToGroupResponse', '4': const {}},
    const {'1': 'RemovePermissionsFromGroup', '2': '.v1.RemovePermissionsFromGroupRequest', '3': '.v1.RemovePermissionsFromGroupResponse', '4': const {}},
    const {'1': 'ListGroupPermissions', '2': '.v1.ListGroupPermissionsRequest', '3': '.v1.ListGroupPermissionsResponse', '4': const {}},
    const {'1': 'AssignPermissionsToUser', '2': '.v1.AssignPermissionsToUserRequest', '3': '.v1.AssignPermissionsToUserResponse', '4': const {}},
    const {'1': 'RemovePermissionsFromUser', '2': '.v1.RemovePermissionsFromUserRequest', '3': '.v1.RemovePermissionsFromUserResponse', '4': const {}},
    const {'1': 'ListUserPermissions', '2': '.v1.ListUserPermissionsRequest', '3': '.v1.ListUserPermissionsResponse', '4': const {}},
    const {'1': 'GetUserEffectivePermissions', '2': '.v1.GetUserEffectivePermissionsRequest', '3': '.v1.GetUserEffectivePermissionsResponse', '4': const {}},
    const {'1': 'SignUp', '2': '.v1.SignUpRequest', '3': '.v1.SignUpResponse', '4': const {}},
    const {'1': 'VerifyEmail', '2': '.v1.VerifyEmailRequest', '3': '.v1.VerificationResponse', '4': const {}},
    const {'1': 'VerifyPhone', '2': '.v1.VerifyPhoneRequest', '3': '.v1.VerificationResponse', '4': const {}},
    const {'1': 'SendVerificationCode', '2': '.v1.SendVerificationCodeRequest', '3': '.v1.SendVerificationCodeResponse', '4': const {}},
    const {'1': 'CheckUsername', '2': '.v1.CheckUsernameRequest', '3': '.v1.CheckUsernameResponse', '4': const {}},
    const {'1': 'CheckEmail', '2': '.v1.CheckEmailRequest', '3': '.v1.CheckEmailResponse', '4': const {}},
    const {'1': 'GetUser', '2': '.v1.GetUserRequest', '3': '.v1.GetUserResponse', '4': const {}},
    const {'1': 'UpdateUser', '2': '.v1.UpdateUserRequest', '3': '.v1.UpdateUserResponse', '4': const {}},
    const {'1': 'ChangePassword', '2': '.v1.ChangePasswordRequest', '3': '.v1.ChangePasswordResponse', '4': const {}},
    const {'1': 'ListUsers', '2': '.v1.ListUsersRequest', '3': '.v1.ListUsersResponse', '4': const {}},
    const {'1': 'DeleteUser', '2': '.v1.DeleteUserRequest', '3': '.v1.DeleteUserResponse', '4': const {}},
    const {'1': 'CreateProfile', '2': '.v1.CreateProfileRequest', '3': '.v1.CreateProfileResponse', '4': const {}},
    const {'1': 'ListUserProfiles', '2': '.v1.ListUserProfilesRequest', '3': '.v1.ListUserProfilesResponse', '4': const {}},
    const {'1': 'UpdateProfile', '2': '.v1.UpdateProfileRequest', '3': '.v1.UpdateProfileResponse', '4': const {}},
    const {'1': 'DeleteProfile', '2': '.v1.DeleteProfileRequest', '3': '.v1.DeleteProfileResponse', '4': const {}},
    const {'1': 'SignIn', '2': '.v1.SignInRequest', '3': '.v1.SignInResponse', '4': const {}},
    const {'1': 'RefreshToken', '2': '.v1.RefreshTokenRequest', '3': '.v1.RefreshTokenResponse', '4': const {}},
    const {'1': 'Logout', '2': '.v1.LogoutRequest', '3': '.v1.LogoutResponse', '4': const {}},
    const {'1': 'ValidateToken', '2': '.v1.ValidateTokenRequest', '3': '.v1.ValidateTokenResponse', '4': const {}},
    const {'1': 'ListUserSessions', '2': '.v1.ListUserSessionsRequest', '3': '.v1.ListUserSessionsResponse', '4': const {}},
    const {'1': 'TerminateSession', '2': '.v1.TerminateSessionRequest', '3': '.v1.TerminateSessionResponse', '4': const {}},
  ],
};

@$core.Deprecated('Use openAuthServiceDescriptor instead')
const $core.Map<$core.String, $core.Map<$core.String, $core.dynamic>> OpenAuthServiceBase$messageJson = const {
  '.v1.PingRequest': $1.PingRequest$json,
  '.v1.PingResponse': $1.PingResponse$json,
  '.v1.StatsRequest': $2.StatsRequest$json,
  '.v1.StatsResponse': $2.StatsResponse$json,
  '.v1.CreatePermissionRequest': $3.CreatePermissionRequest$json,
  '.v1.Permission': $3.Permission$json,
  '.v1.GetPermissionRequest': $3.GetPermissionRequest$json,
  '.v1.ListPermissionsRequest': $3.ListPermissionsRequest$json,
  '.v1.ListPermissionsResponse': $3.ListPermissionsResponse$json,
  '.v1.UpdatePermissionRequest': $3.UpdatePermissionRequest$json,
  '.v1.DeletePermissionRequest': $3.DeletePermissionRequest$json,
  '.v1.DeletePermissionResponse': $3.DeletePermissionResponse$json,
  '.v1.CreateGroupRequest': $4.CreateGroupRequest$json,
  '.v1.CreateGroupResponse': $4.CreateGroupResponse$json,
  '.v1.Group': $4.Group$json,
  '.v1.GetGroupRequest': $4.GetGroupRequest$json,
  '.v1.GetGroupResponse': $4.GetGroupResponse$json,
  '.v1.ListGroupsRequest': $4.ListGroupsRequest$json,
  '.v1.ListGroupsResponse': $4.ListGroupsResponse$json,
  '.v1.UpdateGroupRequest': $4.UpdateGroupRequest$json,
  '.v1.UpdateGroupResponse': $4.UpdateGroupResponse$json,
  '.v1.DeleteGroupRequest': $4.DeleteGroupRequest$json,
  '.v1.DeleteGroupResponse': $4.DeleteGroupResponse$json,
  '.v1.AssignUsersToGroupRequest': $4.AssignUsersToGroupRequest$json,
  '.v1.AssignUsersToGroupResponse': $4.AssignUsersToGroupResponse$json,
  '.v1.RemoveUsersFromGroupRequest': $4.RemoveUsersFromGroupRequest$json,
  '.v1.RemoveUsersFromGroupResponse': $4.RemoveUsersFromGroupResponse$json,
  '.v1.ListGroupUsersRequest': $4.ListGroupUsersRequest$json,
  '.v1.ListGroupUsersResponse': $4.ListGroupUsersResponse$json,
  '.v1.GroupUser': $4.GroupUser$json,
  '.v1.ListUserGroupsRequest': $4.ListUserGroupsRequest$json,
  '.v1.ListUserGroupsResponse': $4.ListUserGroupsResponse$json,
  '.v1.UserGroup': $4.UserGroup$json,
  '.v1.AssignPermissionsToGroupRequest': $5.AssignPermissionsToGroupRequest$json,
  '.v1.AssignPermissionsToGroupResponse': $5.AssignPermissionsToGroupResponse$json,
  '.v1.RemovePermissionsFromGroupRequest': $5.RemovePermissionsFromGroupRequest$json,
  '.v1.RemovePermissionsFromGroupResponse': $5.RemovePermissionsFromGroupResponse$json,
  '.v1.ListGroupPermissionsRequest': $5.ListGroupPermissionsRequest$json,
  '.v1.ListGroupPermissionsResponse': $5.ListGroupPermissionsResponse$json,
  '.v1.EffectivePermission': $5.EffectivePermission$json,
  '.v1.AssignPermissionsToUserRequest': $5.AssignPermissionsToUserRequest$json,
  '.v1.AssignPermissionsToUserResponse': $5.AssignPermissionsToUserResponse$json,
  '.v1.RemovePermissionsFromUserRequest': $5.RemovePermissionsFromUserRequest$json,
  '.v1.RemovePermissionsFromUserResponse': $5.RemovePermissionsFromUserResponse$json,
  '.v1.ListUserPermissionsRequest': $5.ListUserPermissionsRequest$json,
  '.v1.ListUserPermissionsResponse': $5.ListUserPermissionsResponse$json,
  '.v1.GetUserEffectivePermissionsRequest': $5.GetUserEffectivePermissionsRequest$json,
  '.v1.GetUserEffectivePermissionsResponse': $5.GetUserEffectivePermissionsResponse$json,
  '.v1.SignUpRequest': $0.SignUpRequest$json,
  '.v1.SignUpResponse': $0.SignUpResponse$json,
  '.v1.User': $0.User$json,
  '.v1.VerifyEmailRequest': $0.VerifyEmailRequest$json,
  '.v1.VerificationResponse': $0.VerificationResponse$json,
  '.v1.VerifyPhoneRequest': $0.VerifyPhoneRequest$json,
  '.v1.SendVerificationCodeRequest': $0.SendVerificationCodeRequest$json,
  '.v1.SendVerificationCodeResponse': $0.SendVerificationCodeResponse$json,
  '.v1.CheckUsernameRequest': $0.CheckUsernameRequest$json,
  '.v1.CheckUsernameResponse': $0.CheckUsernameResponse$json,
  '.v1.CheckEmailRequest': $0.CheckEmailRequest$json,
  '.v1.CheckEmailResponse': $0.CheckEmailResponse$json,
  '.v1.GetUserRequest': $0.GetUserRequest$json,
  '.v1.GetUserResponse': $0.GetUserResponse$json,
  '.v1.UserProfile': $0.UserProfile$json,
  '.v1.UpdateUserRequest': $0.UpdateUserRequest$json,
  '.v1.UpdateUserResponse': $0.UpdateUserResponse$json,
  '.v1.ChangePasswordRequest': $0.ChangePasswordRequest$json,
  '.v1.ChangePasswordResponse': $0.ChangePasswordResponse$json,
  '.v1.ListUsersRequest': $0.ListUsersRequest$json,
  '.v1.ListUsersResponse': $0.ListUsersResponse$json,
  '.v1.DeleteUserRequest': $0.DeleteUserRequest$json,
  '.v1.DeleteUserResponse': $0.DeleteUserResponse$json,
  '.v1.CreateProfileRequest': $0.CreateProfileRequest$json,
  '.v1.CreateProfileResponse': $0.CreateProfileResponse$json,
  '.v1.ListUserProfilesRequest': $0.ListUserProfilesRequest$json,
  '.v1.ListUserProfilesResponse': $0.ListUserProfilesResponse$json,
  '.v1.UpdateProfileRequest': $0.UpdateProfileRequest$json,
  '.v1.UpdateProfileResponse': $0.UpdateProfileResponse$json,
  '.v1.DeleteProfileRequest': $0.DeleteProfileRequest$json,
  '.v1.DeleteProfileResponse': $0.DeleteProfileResponse$json,
  '.v1.SignInRequest': $6.SignInRequest$json,
  '.v1.SignInMetadata': $6.SignInMetadata$json,
  '.v1.SignInResponse': $6.SignInResponse$json,
  '.v1.RefreshTokenRequest': $6.RefreshTokenRequest$json,
  '.v1.RefreshTokenResponse': $6.RefreshTokenResponse$json,
  '.v1.LogoutRequest': $6.LogoutRequest$json,
  '.v1.LogoutResponse': $6.LogoutResponse$json,
  '.v1.ValidateTokenRequest': $6.ValidateTokenRequest$json,
  '.v1.ValidateTokenResponse': $6.ValidateTokenResponse$json,
  '.v1.ListUserSessionsRequest': $6.ListUserSessionsRequest$json,
  '.v1.ListUserSessionsResponse': $6.ListUserSessionsResponse$json,
  '.v1.Session': $6.Session$json,
  '.v1.TerminateSessionRequest': $6.TerminateSessionRequest$json,
  '.v1.TerminateSessionResponse': $6.TerminateSessionResponse$json,
};

/// Descriptor for `OpenAuth`. Decode as a `google.protobuf.ServiceDescriptorProto`.
final $typed_data.Uint8List openAuthServiceDescriptor = $convert.base64Decode('');
