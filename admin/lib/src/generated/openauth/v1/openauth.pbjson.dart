///
//  Generated code. Do not modify.
//  source: openauth/v1/openauth.proto
//
// @dart = 2.12
// ignore_for_file: annotate_overrides,camel_case_types,constant_identifier_names,deprecated_member_use_from_same_package,directives_ordering,library_prefixes,non_constant_identifier_names,prefer_final_fields,return_of_invalid_type,unnecessary_const,unnecessary_import,unnecessary_this,unused_import,unused_shown_name

import 'dart:core' as $core;
import 'dart:convert' as $convert;
import 'dart:typed_data' as $typed_data;
import '../../common/ping.pbjson.dart' as $2;
import 'stats.pbjson.dart' as $3;
import 'permissions.pbjson.dart' as $4;
import 'groups.pbjson.dart' as $5;
import 'permission_assignments.pbjson.dart' as $6;
import 'users.pbjson.dart' as $1;
import 'sessions.pbjson.dart' as $7;

const $core.Map<$core.String, $core.dynamic> OpenAuthServiceBase$json = const {
  '1': 'OpenAuth',
  '2': const [
    const {'1': 'Ping', '2': '.v1.PingRequest', '3': '.v1.PingResponse', '4': const {}},
    const {'1': 'Stats', '2': '.v1.StatsRequest', '3': '.v1.StatsResponse', '4': const {}},
    const {'1': 'CreatePermission', '2': '.v1.CreatePermissionRequest', '3': '.v1.Permission', '4': const {}},
    const {'1': 'GetPermission', '2': '.v1.GetPermissionRequest', '3': '.v1.Permission', '4': const {}},
    const {'1': 'ListPermissions', '2': '.v1.ListPermissionsRequest', '3': '.v1.ListPermissionsResponse', '4': const {}},
    const {'1': 'UpdatePermission', '2': '.v1.UpdatePermissionRequest', '3': '.v1.Permission', '4': const {}},
    const {'1': 'DeletePermission', '2': '.v1.DeletePermissionRequest', '3': '.v1.DeletePermissionResponse', '4': const {}},
    const {'1': 'CreateGroup', '2': '.v1.CreateGroupRequest', '3': '.v1.CreateGroupResponse', '4': const {}},
    const {'1': 'GetGroup', '2': '.v1.GetGroupRequest', '3': '.v1.GetGroupResponse', '4': const {}},
    const {'1': 'ListGroups', '2': '.v1.ListGroupsRequest', '3': '.v1.ListGroupsResponse', '4': const {}},
    const {'1': 'UpdateGroup', '2': '.v1.UpdateGroupRequest', '3': '.v1.UpdateGroupResponse', '4': const {}},
    const {'1': 'DeleteGroup', '2': '.v1.DeleteGroupRequest', '3': '.v1.DeleteGroupResponse', '4': const {}},
    const {'1': 'AssignUserToGroup', '2': '.v1.AssignUserToGroupRequest', '3': '.v1.AssignUserToGroupResponse', '4': const {}},
    const {'1': 'RemoveUserFromGroup', '2': '.v1.RemoveUserFromGroupRequest', '3': '.v1.RemoveUserFromGroupResponse', '4': const {}},
    const {'1': 'ListGroupUsers', '2': '.v1.ListGroupUsersRequest', '3': '.v1.ListGroupUsersResponse', '4': const {}},
    const {'1': 'ListUserGroups', '2': '.v1.ListUserGroupsRequest', '3': '.v1.ListUserGroupsResponse', '4': const {}},
    const {'1': 'AssignPermissionToGroup', '2': '.v1.AssignPermissionToGroupRequest', '3': '.v1.AssignPermissionToGroupResponse', '4': const {}},
    const {'1': 'RemovePermissionFromGroup', '2': '.v1.RemovePermissionFromGroupRequest', '3': '.v1.RemovePermissionFromGroupResponse', '4': const {}},
    const {'1': 'ListGroupPermissions', '2': '.v1.ListGroupPermissionsRequest', '3': '.v1.ListGroupPermissionsResponse', '4': const {}},
    const {'1': 'AssignPermissionToUser', '2': '.v1.AssignPermissionToUserRequest', '3': '.v1.AssignPermissionToUserResponse', '4': const {}},
    const {'1': 'RemovePermissionFromUser', '2': '.v1.RemovePermissionFromUserRequest', '3': '.v1.RemovePermissionFromUserResponse', '4': const {}},
    const {'1': 'ListUserPermissions', '2': '.v1.ListUserPermissionsRequest', '3': '.v1.ListUserPermissionsResponse', '4': const {}},
    const {'1': 'GetUserEffectivePermissions', '2': '.v1.GetUserEffectivePermissionsRequest', '3': '.v1.GetUserEffectivePermissionsResponse', '4': const {}},
    const {'1': 'SignUp', '2': '.v1.SignUpRequest', '3': '.v1.SignUpResponse', '4': const {}},
    const {'1': 'VerifyEmail', '2': '.v1.VerifyEmailRequest', '3': '.v1.VerificationResponse', '4': const {}},
    const {'1': 'VerifyPhone', '2': '.v1.VerifyPhoneRequest', '3': '.v1.VerificationResponse', '4': const {}},
    const {'1': 'SendVerificationCode', '2': '.v1.SendVerificationCodeRequest', '3': '.v1.SendVerificationCodeResponse', '4': const {}},
    const {'1': 'CheckUsername', '2': '.v1.CheckUsernameRequest', '3': '.v1.CheckUsernameResponse', '4': const {}},
    const {'1': 'CheckEmail', '2': '.v1.CheckEmailRequest', '3': '.v1.CheckEmailResponse', '4': const {}},
    const {'1': 'GetUser', '2': '.v1.GetUserRequest', '3': '.v1.GetUserResponse', '4': const {}},
    const {'1': 'UpdateUser', '2': '.v1.UpdateUserRequest', '3': '.v1.UpdateUserResponse', '4': const {}},
    const {'1': 'ChangePassword', '2': '.v1.ChangePasswordRequest', '3': '.v1.ChangePasswordResponse', '4': const {}},
    const {'1': 'ListUsers', '2': '.v1.ListUsersRequest', '3': '.v1.ListUsersResponse', '4': const {}},
    const {'1': 'DeleteUser', '2': '.v1.DeleteUserRequest', '3': '.v1.DeleteUserResponse', '4': const {}},
    const {'1': 'CreateProfile', '2': '.v1.CreateProfileRequest', '3': '.v1.CreateProfileResponse', '4': const {}},
    const {'1': 'ListUserProfiles', '2': '.v1.ListUserProfilesRequest', '3': '.v1.ListUserProfilesResponse', '4': const {}},
    const {'1': 'UpdateProfile', '2': '.v1.UpdateProfileRequest', '3': '.v1.UpdateProfileResponse', '4': const {}},
    const {'1': 'DeleteProfile', '2': '.v1.DeleteProfileRequest', '3': '.v1.DeleteProfileResponse', '4': const {}},
    const {'1': 'SignIn', '2': '.v1.SignInRequest', '3': '.v1.SignInResponse', '4': const {}},
    const {'1': 'RefreshToken', '2': '.v1.RefreshTokenRequest', '3': '.v1.RefreshTokenResponse', '4': const {}},
    const {'1': 'Logout', '2': '.v1.LogoutRequest', '3': '.v1.LogoutResponse', '4': const {}},
    const {'1': 'ValidateToken', '2': '.v1.ValidateTokenRequest', '3': '.v1.ValidateTokenResponse', '4': const {}},
    const {'1': 'ListUserSessions', '2': '.v1.ListUserSessionsRequest', '3': '.v1.ListUserSessionsResponse', '4': const {}},
    const {'1': 'TerminateSession', '2': '.v1.TerminateSessionRequest', '3': '.v1.TerminateSessionResponse', '4': const {}},
  ],
};

@$core.Deprecated('Use openAuthServiceDescriptor instead')
const $core.Map<$core.String, $core.Map<$core.String, $core.dynamic>> OpenAuthServiceBase$messageJson = const {
  '.v1.PingRequest': $2.PingRequest$json,
  '.v1.PingResponse': $2.PingResponse$json,
  '.v1.StatsRequest': $3.StatsRequest$json,
  '.v1.StatsResponse': $3.StatsResponse$json,
  '.v1.CreatePermissionRequest': $4.CreatePermissionRequest$json,
  '.v1.Permission': $4.Permission$json,
  '.v1.GetPermissionRequest': $4.GetPermissionRequest$json,
  '.v1.ListPermissionsRequest': $4.ListPermissionsRequest$json,
  '.v1.ListPermissionsResponse': $4.ListPermissionsResponse$json,
  '.v1.UpdatePermissionRequest': $4.UpdatePermissionRequest$json,
  '.v1.DeletePermissionRequest': $4.DeletePermissionRequest$json,
  '.v1.DeletePermissionResponse': $4.DeletePermissionResponse$json,
  '.v1.CreateGroupRequest': $5.CreateGroupRequest$json,
  '.v1.CreateGroupResponse': $5.CreateGroupResponse$json,
  '.v1.Group': $5.Group$json,
  '.v1.GetGroupRequest': $5.GetGroupRequest$json,
  '.v1.GetGroupResponse': $5.GetGroupResponse$json,
  '.v1.ListGroupsRequest': $5.ListGroupsRequest$json,
  '.v1.ListGroupsResponse': $5.ListGroupsResponse$json,
  '.v1.UpdateGroupRequest': $5.UpdateGroupRequest$json,
  '.v1.UpdateGroupResponse': $5.UpdateGroupResponse$json,
  '.v1.DeleteGroupRequest': $5.DeleteGroupRequest$json,
  '.v1.DeleteGroupResponse': $5.DeleteGroupResponse$json,
  '.v1.AssignUserToGroupRequest': $5.AssignUserToGroupRequest$json,
  '.v1.AssignUserToGroupResponse': $5.AssignUserToGroupResponse$json,
  '.v1.RemoveUserFromGroupRequest': $5.RemoveUserFromGroupRequest$json,
  '.v1.RemoveUserFromGroupResponse': $5.RemoveUserFromGroupResponse$json,
  '.v1.ListGroupUsersRequest': $5.ListGroupUsersRequest$json,
  '.v1.ListGroupUsersResponse': $5.ListGroupUsersResponse$json,
  '.v1.GroupUser': $5.GroupUser$json,
  '.v1.ListUserGroupsRequest': $5.ListUserGroupsRequest$json,
  '.v1.ListUserGroupsResponse': $5.ListUserGroupsResponse$json,
  '.v1.UserGroup': $5.UserGroup$json,
  '.v1.AssignPermissionToGroupRequest': $6.AssignPermissionToGroupRequest$json,
  '.v1.AssignPermissionToGroupResponse': $6.AssignPermissionToGroupResponse$json,
  '.v1.RemovePermissionFromGroupRequest': $6.RemovePermissionFromGroupRequest$json,
  '.v1.RemovePermissionFromGroupResponse': $6.RemovePermissionFromGroupResponse$json,
  '.v1.ListGroupPermissionsRequest': $6.ListGroupPermissionsRequest$json,
  '.v1.ListGroupPermissionsResponse': $6.ListGroupPermissionsResponse$json,
  '.v1.EffectivePermission': $6.EffectivePermission$json,
  '.v1.AssignPermissionToUserRequest': $6.AssignPermissionToUserRequest$json,
  '.v1.AssignPermissionToUserResponse': $6.AssignPermissionToUserResponse$json,
  '.v1.RemovePermissionFromUserRequest': $6.RemovePermissionFromUserRequest$json,
  '.v1.RemovePermissionFromUserResponse': $6.RemovePermissionFromUserResponse$json,
  '.v1.ListUserPermissionsRequest': $6.ListUserPermissionsRequest$json,
  '.v1.ListUserPermissionsResponse': $6.ListUserPermissionsResponse$json,
  '.v1.GetUserEffectivePermissionsRequest': $6.GetUserEffectivePermissionsRequest$json,
  '.v1.GetUserEffectivePermissionsResponse': $6.GetUserEffectivePermissionsResponse$json,
  '.v1.SignUpRequest': $1.SignUpRequest$json,
  '.v1.SignUpResponse': $1.SignUpResponse$json,
  '.v1.User': $1.User$json,
  '.v1.VerifyEmailRequest': $1.VerifyEmailRequest$json,
  '.v1.VerificationResponse': $1.VerificationResponse$json,
  '.v1.VerifyPhoneRequest': $1.VerifyPhoneRequest$json,
  '.v1.SendVerificationCodeRequest': $1.SendVerificationCodeRequest$json,
  '.v1.SendVerificationCodeResponse': $1.SendVerificationCodeResponse$json,
  '.v1.CheckUsernameRequest': $1.CheckUsernameRequest$json,
  '.v1.CheckUsernameResponse': $1.CheckUsernameResponse$json,
  '.v1.CheckEmailRequest': $1.CheckEmailRequest$json,
  '.v1.CheckEmailResponse': $1.CheckEmailResponse$json,
  '.v1.GetUserRequest': $1.GetUserRequest$json,
  '.v1.GetUserResponse': $1.GetUserResponse$json,
  '.v1.UserProfile': $1.UserProfile$json,
  '.v1.UpdateUserRequest': $1.UpdateUserRequest$json,
  '.v1.UpdateUserResponse': $1.UpdateUserResponse$json,
  '.v1.ChangePasswordRequest': $1.ChangePasswordRequest$json,
  '.v1.ChangePasswordResponse': $1.ChangePasswordResponse$json,
  '.v1.ListUsersRequest': $1.ListUsersRequest$json,
  '.v1.ListUsersResponse': $1.ListUsersResponse$json,
  '.v1.DeleteUserRequest': $1.DeleteUserRequest$json,
  '.v1.DeleteUserResponse': $1.DeleteUserResponse$json,
  '.v1.CreateProfileRequest': $1.CreateProfileRequest$json,
  '.v1.CreateProfileResponse': $1.CreateProfileResponse$json,
  '.v1.ListUserProfilesRequest': $1.ListUserProfilesRequest$json,
  '.v1.ListUserProfilesResponse': $1.ListUserProfilesResponse$json,
  '.v1.UpdateProfileRequest': $1.UpdateProfileRequest$json,
  '.v1.UpdateProfileResponse': $1.UpdateProfileResponse$json,
  '.v1.DeleteProfileRequest': $1.DeleteProfileRequest$json,
  '.v1.DeleteProfileResponse': $1.DeleteProfileResponse$json,
  '.v1.SignInRequest': $7.SignInRequest$json,
  '.v1.SignInMetadata': $7.SignInMetadata$json,
  '.v1.SignInResponse': $7.SignInResponse$json,
  '.v1.RefreshTokenRequest': $7.RefreshTokenRequest$json,
  '.v1.RefreshTokenResponse': $7.RefreshTokenResponse$json,
  '.v1.LogoutRequest': $7.LogoutRequest$json,
  '.v1.LogoutResponse': $7.LogoutResponse$json,
  '.v1.ValidateTokenRequest': $7.ValidateTokenRequest$json,
  '.v1.ValidateTokenResponse': $7.ValidateTokenResponse$json,
  '.v1.ListUserSessionsRequest': $7.ListUserSessionsRequest$json,
  '.v1.ListUserSessionsResponse': $7.ListUserSessionsResponse$json,
  '.v1.Session': $7.Session$json,
  '.v1.TerminateSessionRequest': $7.TerminateSessionRequest$json,
  '.v1.TerminateSessionResponse': $7.TerminateSessionResponse$json,
};

/// Descriptor for `OpenAuth`. Decode as a `google.protobuf.ServiceDescriptorProto`.
final $typed_data.Uint8List openAuthServiceDescriptor = $convert.base64Decode('');
